name: Release Drafter

on:
  pull_request:
    # branches to consider in the event; optional, defaults to all
    branches:
      - main

permissions:
  contents: read

jobs:
  branch_validation:
    runs-on: ubuntu-latest
    outputs:
      validate_branch: ${{steps.valid_branch.outputs.is_match}}
    steps:
      - name: Check branch validation
        id: valid_branch
        run: |
          if [[ ${{ github.event.pull_request.head.ref }} =~ ^release/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "match=true" >> $GITHUB_OUTPUT
            echo "::set-output name=is_match::true"
          else
            echo "This is not a release branch"
            exit 1
          fi
      - name: Build
        if: steps.valid_branch.outputs.match == 'true'
        run: |
          echo "Branch is a match - head: ${{ github.event.pull_request.head.ref}}, base: ${{github.event.pull_request.base.ref }}"
  update_release_draft:
    name: release-drafter
    needs: branch_validation
    runs-on: ubuntu-latest
    # check pull request from release/v*.*.* to main
    if: ${{ github.event.pull_request.base.ref == 'main' && needs.branch_validation.outputs.validate_branch == 'true'}}
    permissions:
      contents: write # for release-drafter/release-drafter to create a github release
      pull-requests: write # for release-drafter/release-drafter to add label to PR
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "main"
      - uses: release-drafter/release-drafter@v5
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        with:
          # config-name: my-config.yml
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
